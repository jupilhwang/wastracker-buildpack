#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e

function error()  {
  echo " !    $*" >&2
  exit 1
}

function status() {
  echo "--------> $1"
}

function print() {
  echo "$1 $2"
}

function indent() {
  c='s/^/    /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

#sync output
$stdout.sync = true

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

status "Custom Buildpack Compile "

print "Build dir" ${BUILD_DIR}
print "Cache dir" ${CACHE_DIR}

mkdir -p $BUILD_DIR $CACHE_DIR

APP_DIR=$(basename $BUILD_DIR)
BUILDPACK_DIR=$(cd $(dirname $0) && cd .. && pwd)

echo "buldpack_dir ${BUILDPACK_DIR}"

echo "BUILDPACK_DIR ls"
ls -lart ${BUILDPACK_DIR}

echo "build_dir ls"
ls -lart $1



echo "The compile script is at [$0]"
echo "The build pack is situated at [$BUILD_PACK_DIR]"

echo "Moving to the cache dir..."
cd "$CACHE_DIR"
echo "Now in [$(pwd)]"

echo "Directory listing:"
ls -la

echo "Listing Build Pack Directory:"
ls -la /tmp/buildpacks

echo "Listing Build Pack Cache:"
ls -la "$BUILDPACK_CACHE"

echo "Listing Environment:"
env

echo "Who am i?"
whoami

echo "Disk Usage:"
df -h

echo "Listing OS Info:"
cat /etc/issue

echo "Listing script versions:"
python -V
echo
ruby -v
echo
perl -v

echo "User Limits:"
ulimit -a
echo

echo "Check for FUSE support"
/sbin/mount.fuse -h
ls -l /usr/share/doc/fuse-utils

echo "CPU Info"
cat /proc/cpuinfo

echo "Look for staging_info.yml file"
cat "$BUILD_DIR/staging_info.yml"

cd ../
echo "Creating start script"
cat > "$BUILD_DIR/start.sh" <<EOF
#!/bin/bash
#
# Start Python Web Server & SSH Reverse Tunnel
#
# Copy SSH keys if included with the app
if [ -d "/home/vcap/app/.ssh" ]; then
    echo "Copied SSH keys"
    cp -R /home/vcap/app/.ssh /home/vcap/
    # Start reverse SSH Tunnel
    echo "Starting SSH Reverse Tunnel"
    ssh -f -N -T -R 2222:localhost:\$VCAP_APP_PORT daniel@\$SSH_HOST
fi
# Start Python Server
echo "Starting Web Server"
python /home/vcap/app/boot.py /
# Start Web Socket Server
#echo "Starting WebSocketD"
#curl -s https://raw.github.com/dmikusa-pivotal/cf-debug-console/master/debug.sh | bash
EOF
chmod 755 "$BUILD_DIR/start.sh"

echo "Creating script to start a small Python Web server"
cat > "$BUILD_DIR/boot.py" <<EOF
#!/usr/bin/env python
#
# Simple HTTP Server for accessing files in target director
#
import SimpleHTTPServer
import SocketServer
import os
import sys
fin = open('/proc/cpuinfo', 'rt')
fout = open('cpuinfo', 'wt')
fout.write(fin.read())
fin.close()
fout.close()
if len(sys.argv) == 2:
    print 'Serving files from [%s]' % sys.argv[1]
    os.chdir(sys.argv[1])
else:
    print 'Service files from [%s]' % os.getcwd()
httpd = SocketServer.TCPServer(
    (os.environ.get('VCAP_APP_HOST', 'localhost'),
     int(os.environ.get('VCAP_APP_PORT', 8080))),
    SimpleHTTPServer.SimpleHTTPRequestHandler)
httpd.serve_forever()
EOF

status "Building runtime environment"
mkdir -p $BUILD_DIR/.profile.d
echo "export PATH=\"\$HOME/vendor/node/bin:\$HOME/bin:\$HOME/node_modules/.bin:\$HOME/vendor/:\$PATH\";" > $BUILD_DIR/.profile.d/nodejs.sh
echo "export LD_LIBRARY_PATH=\"\$HOME/vendor/libs/\";" >> $BUILD_DIR/.profile.d/nodejs.sh

status "Coping "
cp -r $BUILDPACK_DIR/.vendor $BUILD_DIR
cp -r $BUILDPACK_DIR/.profile.d $BUILD_DIR

status "Creating boot"
cd $BUILD_DIR
cat >>boot.sh <<EOF
#!/usr/bin/env bash
set -e
set -x

touch boot.log
touch ~/tomcat/logs/access.log ~/tomcat/logs/error.log
echo "Launching Server" 1> 2>&
catalina start
EOF

chmod a+x boot.sh
